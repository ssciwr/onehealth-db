services:
  # Database service (Stage 1)
  db:
    image: postgis/postgis:17-3.5
    restart: always  
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=onehealth_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d onehealth_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - onehealth-network

  # FastAPI Application service (Stage 2)
  api:
    image: onehealth-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_URL=postgresql://postgres:postgres@db:5432/onehealth_db
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - WAIT_FOR_DB=true
    volumes:
      - ./production.yaml:/onehealth_db/production.yaml
      - ./onehealth_db:/onehealth_db/onehealth_db  # For development hot reload
    ports:
      - "8000:8000"
    command: ["api"]  # Run FastAPI server
    restart: "no"
    networks:
      - onehealth-network
    profiles: ["api"]

  production-runner:
    image: onehealth-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_URL=postgresql://postgres:postgres@db:5432/onehealth_db
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - WAIT_FOR_DB=true
    volumes:
      - ./production.yaml:/onehealth_db/production.yaml
    command: ["production"]
    restart: "no"  # Run once
    networks:
      - onehealth-network
    profiles: ["init"]

volumes:
  postgres_data:

networks:
  onehealth-network:
    driver: bridge