name: CI Check
on: 
  push:
    branches: 
      - main
  pull_request:
  workflow_dispatch:
jobs:
  clean-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11', '3.12']
    services:
      docker:
        image: docker:24.0.0
        options: --privileged
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Getting repository
      uses: actions/checkout@v4

    - name: Install dependencies and package
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Install pytest
      run: |
        pip install pytest pytest-cov

    - name: Execute PyTest
      env:
          DOCKER_HOST: unix:///var/run/docker.sock
          DB_URL: ${{ secrets.DB_URL }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      run: |
        docker run --name my-postgres \
        -e POSTGRES_USER=$POSTGRES_USER \
        -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
        -e POSTGRES_DB=$POSTGRES_DB \
        -p 5432:5432 \
        -d postgis/postgis:17-3.5
        # Wait for the database to be ready instead of using a fixed sleep
        echo "Waiting for database to be ready..."
        timeout 20s bash -c 'until docker exec $(docker ps -q -f name=my-postgres) pg_isready -U postgres -d onehealth_db; do sleep 1; done'
        python -m pytest -svv --cov=onehealth_db --cov-report=xml:onehealth_db/coverage_re/coverage.xml
        docker stop my-postgres
        docker rm my-postgres
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./onehealth_db/coverage_re/